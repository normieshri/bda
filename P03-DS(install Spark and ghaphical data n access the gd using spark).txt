	Practical 3 (only text commands)

Step 1 : Update system packages:-  The sudo apt-get update command is used to download package information from all configured sources.
	$ sudo apt-get update

Step 2 : Install Java.
	$ sudo apt install default-jdk -y

Step 3 : Verify Java installation.
	$ java -version

Step 4 : Download Apache Spark and Extract the Spark tarball.
	$ sudo tar -xzvf spark-3.2.0-bin-hadoop3.2.tgz

Step 5 : Create an installation directory /opt/spark.
	$ sudo mkdir / home/hadoopuser/spark/
	$ sudo mv spark-3.2.0-bin-hadoop3.2/* /home/Hadoop

Step 6:- The .bashrc file is a script file thatâ€™s executed when a user logs in 
$ sudo nano ~/.bashrc

Step 7:- Add the code below at the end of the file, save and exit the file:
export SPARK_HOME=/home/hadoopuser/spark/ spark-3.2.0-bin-hadoop3.2 export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin

Step 8:- Save the changes to take effectSave the changes to take effect.
		 $ source ~/.bashrc 
Start the standalone master server.
		$ start-master.sh 
Find your server hostname from the dashboard by visiting 
		http://Localhost:8080. Under the URL value.
It might look like this: Spark://Ubuntu.myguest.virtualbox.org:7077
Start the Apache Spark worker process. Change spark://ubuntu:7077 with your server hostname. 
		$ start-worker.sh Spark://Ubuntu.myguest.virtualbox.org:7077
Type spark-shell to access the shell

Step 9:- import org.apache.spark.graphx._
case class User(name: String, age: Int)
val users = List((1L, User("Alex", 26)), (2L, User("Bill", 42)), (3L, User("Carol", 18)), (4L, User("Dave", 16)),(5L, User("Eve", 45)), (6L, User("Farell", 30)), (7L, User ("Garry", 32)), (8L,
User("Harry", 36)), (9L,User("Ivan", 28)), (10L, User("Jill", 48))
val usersRDD = sc.parallelize (users) 
val follows = List(Edge(1L, 2L, 1), Edge(2L, 3L, 1), Edge(3L, 1L, 1), Edge(3L, 4L, 1), Edge(3L, 5L, 1), Edge(4L, 5L, 1), Edge(6L, 5L, 1), Edge(7L, 6L, 1), Edge(6L, 8L, 1), Edge(7L, 8L, 1), Edge(7L, 9L, 1), Edge(9L, 8L, 1), Edge(8L, 10L, 1), Edge(10L, 9L, 1), Edge(1L, 1L, 1)) 
val followsRDD = sc.parallelize(follows)
# creating user to access data 19 
val defaultUser = User("Icarus", 22) 
val socialgraph = Graph (usersRDD, followsRDD, defaultUser)

Step 10:- Access data of the graph
socialgraph.numEdges
socialgraph.numVertices
socialgraph.inDegrees.collect
socialgraph.outDegrees.collect

	
